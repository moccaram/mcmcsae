# Create a mapping of periods to numeric midpoint years
# This mapping will be used to convert period labels to numeric values
period_to_year <- c("1999-2003" = 2004,
                    "2007-2011" = 2011,
                    "2013-2017" = 2018,
                    "2018-2022" = 2022)

# Replace factor levels with numeric midpoint values in the direct0 dataset
direct0$years <- as.numeric(period_to_year[as.character(direct0$years)])

# View the first few years after conversion and check the table of year values
head(direct0$years)
table(direct0$years)

# Filter out rows where region is "All" (only keep subnational data)
direct0_subnational <- direct0[direct0$region != "All", ]

# Check the unique regions after filtering
table(direct0_subnational$region)

# Check the structure of the filtered dataset
str(direct0_subnational)

# Check the unique regions
unique(direct0_subnational$region)

# Fit the INLA model for subnational estimates using the filtered dataset
fit_subnational <- fitINLA(
  data = direct0_subnational, 
  geo = geo,  # Subnational spatial structure
  Amat = Amat_region,  # Adjacency matrix for regions
  year_label = unique(direct0_subnational$years),  # Now numeric
  year_range = c(1990, 2022), 
  rw = 2,  # Random walk for temporal smoothing
  m = 1    # Order of random walk
)

# Generate smoothed subnational estimates using the fitted model
out_subnational <- getSmoothed(
  fit_subnational, 
  year_range = c(1990, 2022), 
  year_label = unique(direct0_subnational$years)
)

# Plot the subnational estimates, displaying a smoothing model
plot(out_subnational, 
     year_label = out_subnational$years, 
     is.subnational = TRUE,  # Set to TRUE for subnational visualization
     data.add = NULL,  # No external data for comparison
     option.add = list(point = "mean"), 
     label.add = "Subnational Estimates", 
     color.add = "blue") + 
  ggtitle("Subnational Smoothing Model") + 
  ylim(c(0, 1))

# Extract temporal random effects from the INLA model
random.time <- getDiag(fit_subnational, field = "time", year_label = unique(direct0_subnational$years))

# Rename columns for consistency
colnames(random.time) <- sub("years", "year_label", colnames(random.time))

# Plot the temporal random effects using ggplot2
library(ggplot2)
ggplot(random.time, aes(x = year_label, y = median)) +
  geom_line() +
  facet_grid(~label) + 
  ggtitle("Compare Temporal Random Effects: Subnational Model") + 
  ylab("Random Effects") +
  theme_minimal()
